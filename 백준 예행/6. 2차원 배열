1.
#include <stdio.h>

int main() {
    int N, M;
    scanf("%d %d", &N, &M);
    int A[100][100];
    int B[100][100];

    for (int i = 0; i < N; i++) {
        for (int j = 0; j < M; j++) {
            scanf("%d", &A[i][j]);
        }
    }
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < M; j++) {
            scanf("%d", &B[i][j]);
        }
    }
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < M; j++) {
            printf("%d ", A[i][j] + B[i][j]);
        }
        printf("\n");
    }

    return 0;
}

2.
#include <stdio.h>

int main() {
    int grid[9][9];
    int max_value = -1;
    int max_row = 0; 
    int max_col = 0;  

    for (int i = 0; i < 9; i++) {
        for (int j = 0; j < 9; j++) {
            scanf("%d", &grid[i][j]);
            if (grid[i][j] > max_value) {
                max_value = grid[i][j];
                max_row = i + 1; 
                max_col = j + 1;
            }
        }
    }
    printf("%d\n", max_value);
    printf("%d %d\n", max_row, max_col);

    return 0;
}

3.
#include <stdio.h>
#include <string.h>

int main() {
    char words[5][16];
    int max_len = 0;

    for (int i = 0; i < 5; i++) {
        scanf("%s", words[i]);
        int len = strlen(words[i]);
        if (len > max_len) max_len = len;
    }

    for (int col = 0; col < max_len; col++) {
        for (int row = 0; row < 5; row++) {
            if (col < strlen(words[row])) {
                printf("%c", words[row][col]);
            }
        }
    }
    return 0;
}

4.
#include <stdio.h>

int main() {
    int paper_count;
    int canvas[100][100] = { 0 };
    int x, y;
    int area = 0;

    scanf("%d", &paper_count);

    for (int i = 0; i < paper_count; i++) {
        scanf("%d %d", &x, &y);

        for (int row = y; row < y + 10; row++) {
            for (int col = x; col < x + 10; col++) {
                canvas[row][col] = 1;
            }
        }
    }
    for (int i = 0; i < 100; i++) {
        for (int j = 0; j < 100; j++) {
            if (canvas[i][j] == 1) area++;
        }
    }
    printf("%d\n", area);
    return 0;
}
